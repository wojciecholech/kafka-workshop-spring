version: "3.7"

services:
  app-apollo:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      KAFKA_URL: kafka:9092
      APP_NAME: apollo
      CONSUMER_GROUP: g-apollo
    ports:
      - 8080:8080

  app-voyager:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      KAFKA_URL: kafka:9092
      APP_NAME: voyager
      CONSUMER_GROUP: g-apollo
    ports:
      - 8081:8080

  app-hubble:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      KAFKA_URL: kafka:9092
      APP_NAME: hubble
      CONSUMER_GROUP: g-apollo
    ports:
      - 8082:8080

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"